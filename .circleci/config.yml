version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.9.1

jobs:
  build:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - docker-cache-{{ checksum "nginx/Dockerfile" }}
          paths:
            - ~/caches/images.tar
          name: docker restore cache
      - run:
          command: |
            if [[ -e ~/caches/images.tar ]]; then
              docker load -i ~/caches/images.tar
            fi
          name: docker load
      - run:
          command: docker-compose up -d --build
          name: docker up
      - run:
          command: mkdir -p ~/caches
          name: mkdir -p ~/caches
      - run:
          command: |
            if [[ ! -e ~/caches/images.tar ]]; then
              docker save -o ~/caches/images.tar $(docker images --filter "dangling=false" --format "{{.Repository}}:{{.Tag}}")
            fi
          name: docker save
      - save_cache:
          key: docker-cache-{{ checksum "nginx/Dockerfile" }}
          paths:
            - ~/caches/images.tar
          name: docker save cache
      - restore_cache:
          keys:
            - composer-{{ checksum "src/composer.lock" }}
          name: composer restore cache
      - run:
          command: docker-compose run laravel composer install
          name: composer install
      - save_cache:
          key: composer-{{ checksum "src/composer.lock" }}
          paths:
            - src/vendor
          name: composer save cache
  
  phpunit:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - docker-cache-{{ checksum "nginx/Dockerfile" }}-{{ checksum "src/composer.lock" }}-{{ checksum "src/package.json" }}
          paths:
            - ~/caches/images.tar
      - run:
          command: |
            if [[ -e ~/caches/images.tar ]]; then
              docker load -i ~/caches/images.tar
            fi
          name: docker load
      - restore_cache:
          keys:
            - composer-{{ checksum "src/composer.lock" }}
          name: composer restore cache
      - run:
          command: docker-compose run laravel cp ./.env.example ./.env
          name: create env file
      - run:
          command: docker-compose run laravel php artisan key:generate
          name: generate key
      - run: 
          command: docker-compose run laravel vendor/bin/phpunit
          name: phpunit
  
  phpmd:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - docker-cache-{{ checksum "nginx/Dockerfile" }}-{{ checksum "src/composer.lock" }}-{{ checksum "src/package.json" }}
          paths:
            - ~/caches/images.tar
      - run:
          command: |
            if [[ -e ~/caches/images.tar ]]; then
              docker load -i ~/caches/images.tar
            fi
          name: docker load
      - restore_cache:
          keys:
            - composer-{{ checksum "src/composer.lock" }}
          name: composer restore cache
      - run: 
          command: docker-compose run laravel composer check-phpmd
          name: phpmd

  deploy:
    machine: true
    steps:
      - checkout
      - run:
          command: |
            docker build -fphp-fpm/base.dockerfile .
            docker build -tborderless-gym/app -fphp-fpm/prod.dockerfile .
            docker build -tborderless-gym/nginx -fnginx/Dockerfile .
          name: build iamges

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - phpunit:
          requires:
            - build
      - phpmd:
          requires:
            - build
      - deploy:
          context: aws-eggsystem
          # required:
          #   - phpmd
          #   - phpunit
          # filters:
          #   branches:
          #     only: master
